(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[783],{6601:function(){},8135:function(e,n,a){"use strict";a.d(n,{Z:function(){return t}});let t=new(a(5429)).Connection("https://divine-nameless-snow.solana-mainnet.quiknode.pro/cbf3ffcb19633575cc0d278031b1c28c7e538633","confirmed")},2273:function(e,n,a){"use strict";a.d(n,{LW:function(){return c},ou:function(){return d},SZ:function(){return w},Wx:function(){return T},jg:function(){return h},eL:function(){return S},Yj:function(){return p},dK:function(){return f},Sk:function(){return M},RG:function(){return A},XG:function(){return P}});var t=a(5429),s=a(6906),i=JSON.parse('{"version":"0.1.0","name":"staking","instructions":[{"name":"initPool","accounts":[{"name":"stakePool","isMut":true,"isSigner":false},{"name":"escrowFee","isMut":false,"isSigner":false},{"name":"poolTokenAccount","isMut":true,"isSigner":false},{"name":"escrowTokenAccount","isMut":true,"isSigner":false},{"name":"mint","isMut":false,"isSigner":false},{"name":"payerTokenAccount","isMut":true,"isSigner":false},{"name":"payer","isMut":true,"isSigner":true},{"name":"tokenProgram","isMut":false,"isSigner":false},{"name":"associatedTokenProgram","isMut":false,"isSigner":false},{"name":"systemProgram","isMut":false,"isSigner":false}],"args":[{"name":"amount","type":"u64"}]},{"name":"withdrawTokens","accounts":[{"name":"stakePool","isMut":true,"isSigner":false},{"name":"poolTokenAccount","isMut":true,"isSigner":false},{"name":"stakeMint","isMut":false,"isSigner":false},{"name":"user","isMut":true,"isSigner":true},{"name":"userTokenAccount","isMut":true,"isSigner":false},{"name":"tokenProgram","isMut":false,"isSigner":false},{"name":"associatedTokenProgram","isMut":false,"isSigner":false},{"name":"systemProgram","isMut":false,"isSigner":false}],"args":[{"name":"amount","type":"u64"}]},{"name":"depositeTokens","accounts":[{"name":"stakePool","isMut":true,"isSigner":false},{"name":"poolTokenAccount","isMut":true,"isSigner":false},{"name":"stakeMint","isMut":false,"isSigner":false},{"name":"user","isMut":true,"isSigner":true},{"name":"userTokenAccount","isMut":true,"isSigner":false},{"name":"tokenProgram","isMut":false,"isSigner":false},{"name":"associatedTokenProgram","isMut":false,"isSigner":false},{"name":"systemProgram","isMut":false,"isSigner":false}],"args":[{"name":"amount","type":"u64"}]},{"name":"transferOwner","accounts":[{"name":"stakePool","isMut":true,"isSigner":false},{"name":"user","isMut":true,"isSigner":true},{"name":"systemProgram","isMut":false,"isSigner":false}],"args":[{"name":"newOwner","type":"publicKey"}]},{"name":"initEntry","accounts":[{"name":"stakeEntry","isMut":true,"isSigner":false},{"name":"stakePool","isMut":true,"isSigner":false},{"name":"payer","isMut":true,"isSigner":true},{"name":"systemProgram","isMut":false,"isSigner":false}],"args":[]},{"name":"stakeTokens","accounts":[{"name":"stakePool","isMut":true,"isSigner":false},{"name":"poolTokenAccount","isMut":true,"isSigner":false},{"name":"stakeEntry","isMut":true,"isSigner":false},{"name":"stakeMint","isMut":false,"isSigner":false},{"name":"user","isMut":true,"isSigner":true},{"name":"userTokenAccount","isMut":true,"isSigner":false},{"name":"escrowTokenAccount","isMut":true,"isSigner":false},{"name":"tokenProgram","isMut":false,"isSigner":false},{"name":"associatedTokenProgram","isMut":false,"isSigner":false},{"name":"systemProgram","isMut":false,"isSigner":false}],"args":[{"name":"amount","type":"u64"}]},{"name":"unstakeTokens","accounts":[{"name":"stakePool","isMut":true,"isSigner":false},{"name":"poolTokenAccount","isMut":true,"isSigner":false},{"name":"stakeEntry","isMut":true,"isSigner":false},{"name":"stakeMint","isMut":false,"isSigner":false},{"name":"user","isMut":true,"isSigner":true},{"name":"userTokenAccount","isMut":true,"isSigner":false},{"name":"escrowTokenAccount","isMut":true,"isSigner":false},{"name":"tokenProgram","isMut":false,"isSigner":false},{"name":"associatedTokenProgram","isMut":false,"isSigner":false},{"name":"systemProgram","isMut":false,"isSigner":false}],"args":[{"name":"amount","type":"u64"}]},{"name":"claimTokens","accounts":[{"name":"stakePool","isMut":true,"isSigner":false},{"name":"poolTokenAccount","isMut":true,"isSigner":false},{"name":"stakeEntry","isMut":true,"isSigner":false},{"name":"stakeMint","isMut":false,"isSigner":false},{"name":"user","isMut":true,"isSigner":true},{"name":"userTokenAccount","isMut":true,"isSigner":false},{"name":"escrowTokenAccount","isMut":true,"isSigner":false},{"name":"tokenProgram","isMut":false,"isSigner":false},{"name":"associatedTokenProgram","isMut":false,"isSigner":false},{"name":"systemProgram","isMut":false,"isSigner":false}],"args":[]}],"accounts":[{"name":"StakeEntry","type":{"kind":"struct","fields":[{"name":"bump","type":"u8"},{"name":"pool","type":"publicKey"},{"name":"lastStaker","type":"publicKey"},{"name":"lastStakedAt","type":{"option":"i64"}},{"name":"amount","type":"u64"},{"name":"rewards","type":"u64"},{"name":"claimed","type":"u64"}]}},{"name":"StakePool","type":{"kind":"struct","fields":[{"name":"bump","type":"u8"},{"name":"authority","type":"publicKey"},{"name":"totalStaked","type":"u64"},{"name":"totalStakers","type":"u32"},{"name":"mint","type":"publicKey"},{"name":"escrowFee","type":"publicKey"},{"name":"apr","type":"u64"}]}}],"errors":[{"code":6000,"name":"InvalidStakePool","msg":"Invalid stake pool"},{"code":6001,"name":"InvalidStakeEntry","msg":"Invalid stake entry"},{"code":6002,"name":"InvalidAuthority","msg":"Invalid stake pool authority"},{"code":6003,"name":"InvalidEscrow","msg":"Mismatched user and escrow"},{"code":6004,"name":"InvalidStakeMint","msg":"Invalid stake mint"},{"code":6005,"name":"TokensAlreadyStaked","msg":"Tokens Already Staked"},{"code":6006,"name":"InvalidPaymentShare","msg":"Invalid payment share"},{"code":6007,"name":"InvalidPaymentTokenAccount","msg":"Invalid payment token account"},{"code":6008,"name":"InvalidPayerTokenAccount","msg":"Invalid payer token account"},{"code":6009,"name":"InvalidUserStakeMintTokenAccount","msg":"Invalid User Stake Mint Token Account"},{"code":6010,"name":"MinStakeSecondsNotSatisfied","msg":"Minimum stake seconds not satisfied"},{"code":6011,"name":"InvalidUnstakeAmount","msg":"Invalid Unstake Amount"},{"code":6012,"name":"NotEnoughRewards","msg":"Not Enough Rewards"}],"metadata":{"address":"62FFaNtBxn1p77Mcn5wZ6cRFDYq5k4tdubZg67cagvQg"}}'),r=a(8135),o=a(9198),u=a(3659);let m=new t.PublicKey("F2xPo2zDtw1cGNL6X5G46U5yRQrqwLw6uvs9gd81DEMv"),c=new t.PublicKey("BCTJnXmpYpmnozJb2eYykzPnVnV8cSABXXd71iJN8s7t"),l=new t.PublicKey("7LqRw17YaP7AKy1NB6vgFWEGKgL9jcEHejiXrYM78p7H"),g=(0,o.Am)(c,l),d=1e6,k=e=>new s.Y7(r.Z,e,{preflightCommitment:"processed"}),y=async(e,n)=>{let a=k(e),t=new s.$r(i,i.metadata.address,a);return await t.account.stakePool.fetch(n)},S=async e=>{let n=k(e),a=new s.$r(i,i.metadata.address,n);return await a.account.stakeEntry.all([{memcmp:{offset:41,bytes:e.publicKey.toString()}}])},p=async(e,n)=>{try{let a=k(e),r=new s.$r(i,i.metadata.address,a),m=t.PublicKey.findProgramAddressSync([s.P6.bytes.utf8.encode("stake-pool")],r.programId)[0];console.log("stake_pool:",m.toString());let d=await (0,o.Am)(c,m,!0),y=await (0,o.Am)(c,e.publicKey),S=await r.methods.initPool(new s.BN(n)).accounts({stakePool:m,poolTokenAccount:d,mint:c,payerTokenAccount:y,payer:e.publicKey,escrowFee:l,escrowTokenAccount:await g,tokenProgram:u.H_,associatedTokenProgram:u._u,systemProgram:t.SystemProgram.programId}).instruction();return new t.Transaction().add(S)}catch(e){console.log(e)}},f=async(e,n)=>{try{let a=k(e),l=new s.$r(i,i.metadata.address,a),d=await y(e,m),S=new t.Transaction,p=v(m,null==e?void 0:e.publicKey),f=await r.Z.getAccountInfo(p);if(null===f){let n=await b(e,m,p);S.add(n)}let M=await (0,o.Am)(null==d?void 0:d.mint,m,!0),w=await (0,o.Am)(null==d?void 0:d.mint,null==e?void 0:e.publicKey),P=await (0,o.ih)(r.Z,new t.PublicKey(c)),T=parseInt("1"+"0".repeat(P.decimals)),A=await l.methods.stakeTokens(new s.BN(n*T)).accounts({stakePool:m,poolTokenAccount:M,stakeEntry:p,stakeMint:null==d?void 0:d.mint,user:e.publicKey,userTokenAccount:w,escrowTokenAccount:await g,tokenProgram:u.H_,associatedTokenProgram:u._u,systemProgram:t.SystemProgram.programId}).instruction();return S.add(A),S}catch(e){console.log(e)}},M=async(e,n)=>{try{let a=k(e),r=new s.$r(i,i.metadata.address,a),c=await y(e,m),l=new t.Transaction,S=v(m,null==e?void 0:e.publicKey),p=await (0,o.Am)(null==c?void 0:c.mint,null==e?void 0:e.publicKey),f=await (0,o.Am)(null==c?void 0:c.mint,m,!0),M=await r.methods.unstakeTokens(new s.BN(n*d)).accounts({stakePool:m,poolTokenAccount:f,stakeEntry:S,stakeMint:null==c?void 0:c.mint,user:e.publicKey,escrowTokenAccount:await g,userTokenAccount:p,tokenProgram:u.H_,associatedTokenProgram:u._u,systemProgram:t.SystemProgram.programId}).instruction();return l.add(M),l}catch(e){console.log(e)}},w=async e=>{try{let n=k(e),a=new s.$r(i,i.metadata.address,n),r=await y(e,m),c=new t.Transaction,l=v(m,null==e?void 0:e.publicKey),d=await (0,o.Am)(null==r?void 0:r.mint,null==e?void 0:e.publicKey),S=await (0,o.Am)(null==r?void 0:r.mint,m,!0),p=await a.methods.claimTokens().accounts({stakePool:m,poolTokenAccount:S,stakeEntry:l,stakeMint:null==r?void 0:r.mint,user:e.publicKey,userTokenAccount:d,escrowTokenAccount:await g,tokenProgram:u.H_,associatedTokenProgram:u._u,systemProgram:t.SystemProgram.programId}).instruction();return c.add(p),c}catch(e){console.log(e)}},P=async(e,n)=>{try{let a=k(e),r=new s.$r(i,i.metadata.address,a),c=await y(e,m),l=new t.Transaction,g=await (0,o.Am)(null==c?void 0:c.mint,null==e?void 0:e.publicKey),S=await (0,o.Am)(null==c?void 0:c.mint,m,!0),p=await r.methods.withdrawTokens(new s.BN(n*d)).accounts({stakePool:m,poolTokenAccount:S,stakeMint:null==c?void 0:c.mint,user:e.publicKey,userTokenAccount:g,tokenProgram:u.H_,associatedTokenProgram:u._u,systemProgram:t.SystemProgram.programId}).instruction();return l.add(p),l}catch(e){console.log(e)}},T=async(e,n)=>{try{let a=k(e),r=new s.$r(i,i.metadata.address,a),c=await y(e,m),l=new t.Transaction,g=await (0,o.Am)(null==c?void 0:c.mint,null==e?void 0:e.publicKey),S=await (0,o.Am)(null==c?void 0:c.mint,m,!0),p=await r.methods.depositeTokens(new s.BN(n*d)).accounts({stakePool:m,poolTokenAccount:S,stakeMint:null==c?void 0:c.mint,user:e.publicKey,userTokenAccount:g,tokenProgram:u.H_,associatedTokenProgram:u._u,systemProgram:t.SystemProgram.programId}).instruction();return l.add(p),l}catch(e){console.log(e)}},A=async(e,n)=>{try{let a=k(e),r=new s.$r(i,i.metadata.address,a),o=new t.Transaction,u=await r.methods.transferOwner(n).accounts({stakePool:m,user:e.publicKey,systemProgram:t.SystemProgram.programId}).instruction();return o.add(u),o}catch(e){console.log(e)}},b=async(e,n,a)=>{let r=k(e),o=new s.$r(i,i.metadata.address,r);return await o.methods.initEntry().accounts({stakeEntry:a,stakePool:n,payer:e.publicKey,systemProgram:t.SystemProgram.programId}).instruction()},v=(e,n)=>t.PublicKey.findProgramAddressSync([s.P6.bytes.utf8.encode("stake-entry"),e.toBuffer(),n.toBuffer()],new t.PublicKey(i.metadata.address))[0],h=e=>{let n=e.match(/custom program error: 0x([0-9a-fA-F]+)/);if(!n||!n[1])return e;{let e=parseInt(n[1],16);return console.log(e),(1===e||3012===e?"Not Enough Balance in Wallet":function(e){let n=i.errors.find(n=>n.code===e);return n?n.msg:"Unknown error code"}(e))||"Error message not found for the provided error code"}}},3340:function(e,n,a){"use strict";a.d(n,{n:function(){return t}});let t=new(a(3320)).rV.PublicKey("5N73fTqVpSxJaugFUzaPHZNQaxpZi4C3WJcpo5m1ARwb")},2182:function(e,n,a){"use strict";a.d(n,{x:function(){return t}});let t={version:"0.1.0",name:"wmp_staking",instructions:[{name:"initialize",accounts:[{name:"admin",isMut:!0,isSigner:!0},{name:"globalData",isMut:!0,isSigner:!1},{name:"systemProgram",isMut:!1,isSigner:!1}],args:[]},{name:"setStakePoolRewards",accounts:[{name:"admin",isMut:!0,isSigner:!0},{name:"stakePool",isMut:!0,isSigner:!1}],args:[{name:"rewardsPerSecond",type:"u64"}]},{name:"recoverStakePoolRewards",accounts:[{name:"admin",isMut:!0,isSigner:!0},{name:"stakePool",isMut:!0,isSigner:!1},{name:"to",isMut:!0,isSigner:!1},{name:"escrowB",isMut:!0,isSigner:!1},{name:"mintB",isMut:!1,isSigner:!1},{name:"tokenProgram",isMut:!1,isSigner:!1}],args:[{name:"amount",type:"u64"}]},{name:"createStakePool",accounts:[{name:"creator",isMut:!0,isSigner:!0},{name:"mintA",isMut:!1,isSigner:!1},{name:"mintB",isMut:!1,isSigner:!1},{name:"globalData",isMut:!0,isSigner:!1},{name:"escrowA",isMut:!0,isSigner:!1},{name:"escrowB",isMut:!0,isSigner:!1},{name:"stakePool",isMut:!0,isSigner:!1},{name:"systemProgram",isMut:!1,isSigner:!1},{name:"tokenProgram",isMut:!1,isSigner:!1},{name:"associatedTokenProgram",isMut:!1,isSigner:!1},{name:"rent",isMut:!1,isSigner:!1}],args:[]},{name:"createStakeEntry",accounts:[{name:"user",isMut:!0,isSigner:!0},{name:"globalData",isMut:!1,isSigner:!1},{name:"stakePool",isMut:!1,isSigner:!1},{name:"stakeEntry",isMut:!0,isSigner:!1},{name:"systemProgram",isMut:!1,isSigner:!1}],args:[]},{name:"stake",accounts:[{name:"staker",isMut:!0,isSigner:!0},{name:"stakePool",isMut:!0,isSigner:!1},{name:"stakeEntry",isMut:!0,isSigner:!1},{name:"stakerTokenA",isMut:!0,isSigner:!1},{name:"escrowA",isMut:!0,isSigner:!1},{name:"escrowFee",isMut:!0,isSigner:!1},{name:"mintA",isMut:!1,isSigner:!1},{name:"tokenProgram",isMut:!1,isSigner:!1}],args:[{name:"amount",type:"u64"}]},{name:"unstake",accounts:[{name:"staker",isMut:!0,isSigner:!0},{name:"stakePool",isMut:!0,isSigner:!1},{name:"stakeEntry",isMut:!0,isSigner:!1},{name:"stakerTokenA",isMut:!0,isSigner:!1},{name:"escrowA",isMut:!0,isSigner:!1},{name:"mintA",isMut:!1,isSigner:!1},{name:"tokenProgram",isMut:!1,isSigner:!1}],args:[{name:"amount",type:"u64"}]},{name:"withdrawStakePoolLp",accounts:[{name:"admin",isMut:!0,isSigner:!0},{name:"stakePool",isMut:!0,isSigner:!1},{name:"stakerTokenA",isMut:!0,isSigner:!1},{name:"escrowA",isMut:!0,isSigner:!1},{name:"mintA",isMut:!1,isSigner:!1},{name:"tokenProgram",isMut:!1,isSigner:!1}],args:[{name:"amount",type:"u64"}]},{name:"claimRewards",accounts:[{name:"staker",isMut:!0,isSigner:!0},{name:"stakePool",isMut:!0,isSigner:!1},{name:"stakeEntry",isMut:!0,isSigner:!1},{name:"stakerB",isMut:!0,isSigner:!1},{name:"escrowB",isMut:!0,isSigner:!1},{name:"mintB",isMut:!1,isSigner:!1},{name:"tokenProgram",isMut:!1,isSigner:!1}],args:[]}],accounts:[{name:"globalData",type:{kind:"struct",fields:[{name:"bump",type:"u8"},{name:"id",type:"u16"}]}},{name:"stakeEntry",type:{kind:"struct",fields:[{name:"bump",type:"u8"},{name:"pool",type:"publicKey"},{name:"balance",type:"u64"},{name:"rewards",type:"u64"},{name:"claimed",type:"u64"},{name:"rewardsPerTokenPaid",type:"u64"}]}},{name:"stakePool",type:{kind:"struct",fields:[{name:"bump",type:"u8"},{name:"id",type:"u16"},{name:"balance",type:"u64"},{name:"mintA",type:"publicKey"},{name:"mintB",type:"publicKey"},{name:"escrowA",type:"publicKey"},{name:"escrowB",type:"publicKey"},{name:"creator",type:"publicKey"},{name:"rewardsPerSecond",type:"u64"},{name:"rewardsPerTokenStored",type:"u64"},{name:"lastUpdateTimestamp",type:"i64"}]}}],errors:[{code:6e3,name:"OwnerMismatch",msg:"Owner mismatch"},{code:6001,name:"TokenAMintMismatch",msg:"Token A mint mismatch"},{code:6002,name:"TokenBMintMismatch",msg:"Token B mint mismatch"}]}},6606:function(){},9591:function(){},4141:function(){},5804:function(){},3522:function(){},2768:function(){},194:function(){}}]);